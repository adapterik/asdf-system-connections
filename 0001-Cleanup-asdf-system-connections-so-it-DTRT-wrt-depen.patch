From a341e8ace1feb028ada248525f9e00c0f57729f7 Mon Sep 17 00:00:00 2001
From: Francois-Rene Rideau <tunes@google.com>
Date: Sat, 29 Dec 2012 13:38:04 -0500
Subject: [PATCH] Cleanup asdf-system-connections so it DTRT wrt dependencies.

This didn't matter back when ASDF used to not handle inter-system dependencies,
but ASDF was fixed starting with ASDF 2.26.9.

Also simplify the damn thing, and hook on operate, not perform.
Should work on any ASDF version starting with 2.000.
---
 dev/asdf-system-connections.lisp |   43 ++++++++-----------------------------
 1 files changed, 10 insertions(+), 33 deletions(-)

diff --git a/dev/asdf-system-connections.lisp b/dev/asdf-system-connections.lisp
index 62fff7b..bfa7af1 100644
--- a/dev/asdf-system-connections.lisp
+++ b/dev/asdf-system-connections.lisp
@@ -9,8 +9,7 @@
 ;;; ---------------------------------------------------------------------------
 
 (defclass system-connection (system)
-  ((systems-required :initarg :systems-required :reader systems-required)
-   (been-loaded? :accessor been-loaded? :initform nil)))
+  ((systems-required :initarg :systems-required :reader systems-required)))
 
 ;;; ---------------------------------------------------------------------------
 
@@ -31,56 +30,34 @@
     `(progn
        (defsystem ,name
          :class ,class
+         :depends-on ,requires
          :systems-required ,requires
-         ,@options) 
+         ,@options)
        (values ',name))))
 
 ;;; ---------------------------------------------------------------------------
 
 (defun load-connected-systems ()
-  (map-system-connections 
+  (map-system-connections
    (lambda (connection)
      (when (and (required-systems-loaded-p connection)
-                (not (system-loaded-p (component-name connection)))
-                (not (been-loaded? connection)))
-       (setf (been-loaded? connection) t)
-       (asdf:oos 'asdf:load-op (component-name connection) :force t)))))
-
-#+Test
-(load-connected-systems)
+                (not (system-loaded-p (component-name connection))))
+       (asdf:load-system (component-name connection))))))
 
 (defun required-systems-loaded-p (connection)
-  (every (lambda (system)
-           (system-loaded-p system))
-         (systems-required connection)))
+  (every #'system-loaded-p (systems-required connection)))
 
 ;;; ---------------------------------------------------------------------------
 
 (defun system-loaded-p (system-name)
-  (let ((system (find-system-in-memory system-name)))
-    (when system
-      (gethash 'load-op (asdf::component-operation-times system)))))
+  (aif (cdr (system-registered-p system-name))
+       (component-operation-time (make-instance 'load-op) it)))
 
 ;;; ---------------------------------------------------------------------------
 
-(defmethod perform :around ((operation load-op) (system system))
-  (call-next-method)
+(defmethod operate :after (operation-class system &key &allow-other-keys)
   (load-connected-systems))
 
 ;;; ---------------------------------------------------------------------------
 
-(defmethod operation-done-p :around ((o load-op) (c system))
-  (let ((it (find-system-in-memory c)))
-    (if (typep it 'system-connection)
-      (been-loaded? it)
-      (call-next-method))))
-
-;;; ---------------------------------------------------------------------------
-
-(defun find-system-in-memory (system-name)
-  (let* ((name (coerce-name system-name))
-        (system (gethash name *defined-systems*)))
-    (when system
-      (cdr system))))
-
 (pushnew :asdf-system-connections *features*)
-- 
1.7.7.3

